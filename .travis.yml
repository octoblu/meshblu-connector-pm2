branches:
  only:
  - "/^v[0-9]/"
matrix:
  fast_finish: true
  include:
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/local/bin \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/local/bin \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/local/bin \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - |
      meshblu-connector-pkger \
      && meshblu-connector-installer-macos --destination-path=/Library/MeshbluConnectors/bin \
      && meshblu-connector-uploader-github
env:
  global:
  - secure: OP2aOvoaYQuBWZ8Gp58OnEM3b21P0RDXwNe5/f+/eu1wIzgtK+A5bMbNifOqA9DUNyQd84N7S3I/xU1DEHgzN6q1g5UMKNuMKG/4VGJm/d8U6rqtc3QS5ZHNfUkLmdMZthaSGgV0A7W4gCqJFG0I8wDKIOIk5XJEZyPkEWN/t0mgWTzyU37/Cqz+EK0khLPLAgZDRtMoQC/R1k/ZM2G8wGmfHc7sdTNVhmQr3S/wmJ/IYK7gdxXB7T0BEYQ0VFBayBBY1GavisTzTbP/0/+lYMHcoM4uCXErksv8gcoRlfPOAyvDkrk5l3/WaYMmzlGB2mlxzkxKjWu+mLOR+q4gp1McY0LuKGoqAqXOOWPSbcDOW2aMYvfLd1oywjl1wanuXoUkf0a6liNm2DTUNJ9YdA064SUHlXoKYBHaZ/d6nnBjOENi85lG7F6+FDdscJdjt7d/S36ugsoMKlyVPcz8u3yZdS4llyAi0Lyy2+OxdgQ5oEsx9ht+ycr2PmZISd+AUE6eo9e+tPxLl6TTWkoRXCr3AEMvHwJD0ffVpes14GZneHK0noXt3kMvlx4rDTakEEAnJfuBKpCjnYwAjUrNZX4+FBZtf7GI7uLba0fm9RqHTTBF4juOMUP3fyBd3dWGer8YoUmRv/uXNk+1E7IDukAvU+0Vcl3ICjo7ZYJcf+U=
  - secure: hzqkOb4XVmpme000lGMq/XQCkEezVsCMN1THZrkomXSZd2W3fs1AWTECUx7MZK9mKJNxkRpW/ackqoDDqW6EKvBt49bIl1t2kOG36sjRqteR1ch+3KSZmqDbCyxhiok9BklEmCu/suizZE8dXZzifpNBTgXODnELkSpB9yjBiDehcLTBQBKqNiIvzfahKXs8fpUhPM0f7bXhLSp6jGKUd8uF6Igtu+uxend+wDIypsC5rmMKcb3nxLurnALyW7iSRmtsWw7yWujrFIoD2XiCUtLDeLVKu5ADwhM7e7qZZ4zMGGjah8jKduED76iDL91VoyCE/2n6Q2c0tvWpjo+omGGKBYpeqftKNhnP3gQGG+2bo4jMscLqxTZyjDbHTR4VWY7QfH3zXk0W2bcH5E9ONWNf2vbSv1rlkeAWKx7cXStMvrWi6XIW8C3vo4xQhArOjyulqN7yY8xReHRdwD5xNDDIXrJZ7Vn5GSqlV8MpcJG8SFmnzu55AK0moPzLdfDTzvO+4L30vUKjMy9OwJV9AvGMGbme2/OU+ciHXPIKGHTOMFmlbJd16CrYIgORcO9vA5YyIFTbYmKrd4YYo0bW1S6M3As4NgObHtBy0A7CEJdBdruzwcLdvWpNylxpt0aJEFGUwezpt3wBbTxKgGDJyKC0YnhumYerl++NjCPlC1k=
  - secure: XszqkemsRzyJWryI8BQQoFRwDAt4grD2KzlaOxQSngPGQDu6tck9oFgl8ggfvil3CFsIveFlmv8bJ/kVZDPI21Ts0YhKzWuddD0rnDaWMSffndZz6+jmyqrhCTDqEPfKWzO4njsdV1MQ9PPa/kWWIKBsBBpCpLmhCcGhdjct+I1s8XcmBw151bNQtWs+3LUAEXgs9/d6/7JtkzZkWT56f9NvW1T6irnOczmyhJ2z1QVdo5VhQ9Gx/OZv/i8yY3klInz+jj3nvUmYIgJ+Uf6xdvW+q9K11lGvhxbbvvZ3EEVVFWrHByqS0RRtQ7py/5Ye820Q3zcPM+6ZYL7fx3Pi7epHK3lGMo81dHnLk1kSOrx4TV3bmrdY72M4mwNxvqZ/wLxq4um2ORkWk0EN5J1Y9UbxI5qQut1F2Er4Lh0FYlGIQR0//3b3pJKVjZCAbTKlLJv2j86zFYHIi4ZHW7ZBDvZeTWSqflj4EcFMSdyAdVFEkXgWxk94N1nEd89RNCtS87oPuAF4XDgAyTVhUg0zpmTlei3Ust/CWcPh8rwQPTslpaEaus/tjj5v0h81GLpJEflqEsNuuDH2fDC9uZ2Ccef68nMPUEB4jsHFDXlCz6OaOw1LJnzp7cODIRgHut6ZZgcKCLuQ9O4txsA6DydL4ZyM7ix29ZcVidOCtGan34o=
  - secure: YliKiYqBpOa8Xe79OrlHaWtdaeSK1Ya3ttemEUVOCHQzVtfQhzzNzL/aZV4Uxltfuy3+zpr6mj4zP0wFQPOvi/41+m5o7ARcp2VAnyQqG1s1Tw19bBXo98Sm9qzDf49Umtc9b+31m6T/WDcwLxidIl3bPLET+PB0bm+xFViauEV7qHNIZYOYi/wvCjChaavnJjFzbrEHkoz8bSzvYv5bIa3pQH80Td5iPpeYaYLEigC4CS+XWDuOqYP3EPzAYmvtoGp/NUiCMepQw6rFc79mN98IP/e8ZTGUOqbUO+lfae+caoB5dIOvS5wsvnRJGrgJKmGXnaZkO/fsTcAkjz9al5pHWi/+sxdz8vqENnuQlPuiDNzXlBCmCRtT9NxPOy4gs0+UFE4jkGNErhSvcgou47wSbs4nX9x2Q56bPxpzJGjUJt1NtKOF17vZ6IIwPhLeoDRpU0jIJSx0jrjZShmjr9VK38VgPMh+QGi9e1kRz2+/s8tQcyYpGucp2/xk4d6EqnnqlnoJJWe0l6OppLrvUPSONlnQCxHIzGf1yolO/plL8twF0ym5+nBOWviUZREYcKfLOmjxO7EWTluma+ZVRCXr6lKM5kCYJ2e0zw1SrkWw3uIJkJyPFwKoA/dERD+rTwGFkFfeGWBK0+8brHhnrELgg50DRVJ+ckxLN0hZ6+o=
  - secure: cKuBKqC4s7Sd+G8dpRRK+MTZtNYwhHUampF8DutmKRKuofGw7mnXdqnwNsOdFfmK+t9lElsw1omrIl5eW5Y/SXaPt1VG3Ictc4AEhPNUbpsVxAAoEqghTM8hCAEQPVb+Bwr4a6YY/pK2Wum1C5ZY6LH8LwFof7RFVJSuxREBbrLKUUzAO6L63RsmGKmqHekQ9vQH+8JLAHVXngpVrkfUql8I+zjUeqwvnpFO4GAbXPtQ3zqVYcBXJicuqKRZ12vccxqAGKks82CpwmCb4LBccKlLPNlBWaUiXCPSwRYrMwAIzfQpOiwn1Y/hAtdI2aUxd3VcBaXMHnN57yPLwxO2gZx1TrSjDbBoCWVp4mY334fOCIXwB3cBXS8wI6ZZA7fPtlrlXXDYQQYRt2DabNR+WPgzxt+rJyLnieelpqRLVjTU97byKOCDn3cig+vCv6a6xRmYCnxpEjhcDdcz5T7OS7iTT3zewPguGg8t+2d3f4GNqw/w0wZ1ZOb0lM/wnC5dbw55d8tWeNdAtpFfiuKiQfcdbDalDdyP+AQqFOTE7b+PW+khG7lYDrUwK0LiWIw2bpp8i2TNDnYdJ0f2RqL3u6Dn3p7mAexyVjX2KY9i4+G5OVczfjXAcdP0l54MsHTPKEuteq6YgXDd2EuHqi7uPSUQFHnjZ2XDU5b4hVp7OAE=
  - secure: jdwsAhIghQ0TXLKtIUOMFv6chlqlvebPnnABUpoMkMM/mRVQ5ctML+xpRG1bBBvjfLz2Z1hVPMMgIq/wLsZoqYJIB1Vgfk2ZzDdsvH0fUiC4E4uKXcT9ieqMcsSBa5unrZNz1vEfdPmlqWXGJ/GJhf++mv1+NtJWFikzg1H9fWz05o0xsycBoGikp58ypSu3FL3/fyWRlhWABab1c7k0yF8dYjrIvSG5wh0wZCsOiIM7uWEDN7mxEd2NAlLX/0qWcVYMZ5JyeZFQpNQnc3mwPD0tas3efkLsaF6Iz8jVCie7AZx85TpCkAhzHKJFde9pxV2dxSNmqhMoOShcn3vU7EAEt3kcndPUwdGtG7lwBahXgmpIcjh321cjBRf+s9/tH+gA57d+rM1I4bTkoqe6mIRmwan72VIjEj5ikqp1UoJH+AElg51NBLffDlgcJUS/Zcg4AZMgcAI2imiFnXXDXTFcXq3x93lpADZdEPyuZDllsx7sdEB1iiIxxFYd6lPWSq6a+wiaOWLWz8GF1IXnq3z3+DN9+q+cQVU5+2OPl2VLJenEmFeqhJaykmBE6zlPdv1tXHljENX18fGOpkTQ7oDtyU3P3SriDvd8/FegivANVHfO7UNBeoukpsCd9tnXYfwT3dAIpbmzCtFk9UTJYXt1/rCAJzbRTbY8092W27M=
