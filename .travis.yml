branches:
  only:
  - "/^v[0-9]/"
matrix:
  fast_finish: true
  include:
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/local/bin \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/local/bin \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/local/bin \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - |
      meshblu-connector-pkger \
      && meshblu-connector-installer-macos --destination-path=/Library/MeshbluConnectors/bin \
      && meshblu-connector-uploader-github
env:
  global:
  - secure: SomYQ1IjplFKH6ilMyZntSU6whrJRRSs2MMdfFzxQNj2oANgDtADJ6944vwMMkQNRebUv8cGzONlYboFrsoaoXale0v1cpNaoBZueBlMFZvo14lTUSz5yhP3MGlDOaX30h4qC88HTXIM9Aba1BbWu7/QEYb8vehC0gLtX+f0Rnj3sHRfi6ML3aQzG9DH0q00KSwmL7vrPDg0p8lsNBbE+9KVoFtn0M35czMrrHzUUjO7vdNsoEqyMILFpmNNu+uiY/z/icGHbnuq+ppoxPbINETB7d/Ncn2zSd9SaToZGjzlNBbokTm50nq6PdTZyyVwzMCckCFWDBMZMne0nYE12+lDMVHnY5IHCr0L4y9o8DuGy4Y1KzDaw8pXnE90Pr/QY2zHdGM9fH4qN5Y7Ku4MKnCLZre6PowlEz97oyU6HljQFYYwQHcUsGzrmjsXsV2h65jbHhzaeh25R7/M+/xdYl4D7FvD1jRF4FDiag0tIivU8V4m0XclNn1KK9YYdl33wB9D+ru9349/i1byhr8DGYYXFHmcOOGivvlhIKm/lljUZd6f7K48zHx1pydsht+XAx5j2SUGyDX/VJmelAsRmofIhRJKgTDBQOqbv99mUSNUpmxpN6B3w0EcUAoHw2Aw541crxrizCxyxy9OXzUIZwMawR3wcmBC45RJkeETjS8=
  - secure: s4wZ6R7GoL58fvCBg9rAR8g1PnvEm9FqF2uhfoXHNhSOZQ8wHSHST0F81mvMBajSKEI3YH0h33DzIaNz+dkJgqJ/ZcGCMZXibBBfMZ3gmW2GthmGwEIkG2Uv6oEGEoGK/lGzMsr/6D5VvRnTDPo9U4or/IN4rB62fJtiuoJsLA2VlscZUehAfJnI8bhQ0U10j+6oWwRDZnk4zxwqo5qLoEOYl8ihFlQfA5Rnlt98SJNhJrV/19ad2/vAdcjNStshKrhbr3881jyhT5j3Ycq55whjLgQyw9HHfRCyBIwlz58LYK0q0JiIBG8b0j4i9qVDmzgUfqeALn84vyxACRILqUCjmqXQhTyIlc2/uqRSl/MzAPcYHcJ6BHQaYbZPkz0KsGuYkMa3mDYbIw7VnI/lbWU7ninayUmhs5dAdJ5IZ11jalVeeYI8y5vr6/xwDbWKmc0oPfyNyIPBzhhU4syISEAuypFhnTM0P45byNyrnKjdWbXfmx+RalKV8HW33Kx6wY7+iZzui1NQxarKzpZSiezF+K7Tvzlsvz3WcuLTmKcOh4r3CgBghSNCSmWQ6h9WIbRfjwmCJIIH7hZCX5NWZf3QhWG2zzLJL4nky3KBycKGy/yYHkhf35LAQQyhSUyLMSlbkMQot5aEj+HfoE05Nz3nomkO0udFdgldbPaK+uQ=
  - secure: b9O8OjLLVX+VjnQ2YvmYWDCeSbzMDtHKO7F6bn/Ehwtf+5OlbMaoi+dzrb/CG9Fn+qyS1RhZbBXDZp2+nIK8sIRS9YNRW613gF9hCe75NwnYVk9dgEcayCKQbNlIS+cD6euciWFiwivzo1lFqO6yxoHv3MrIg8GR9OS1jKoqr1QuYL6vcW8dXnFu9A3rklfbAl+5MpFYN+7hkhSNstinMRLBmVtgJ306Tw88xQFr/I7jdHkhh9IyraD6AcTA3Tr32dkzgBlXBRa+lIZRFwM/xNSY6vdC/kj5JojM/vzNf/MsOKBoyvmpzsdLGS3tF4ZuilWnQsw4LrVcP6pXioxMtfk/3I7E2MFvz2Y1aJuy6VueMCxAkNnxLXy8znAk0kW0/iP4+dmotz8QzSKFRum1jIBw3qhaVqMzABtJjJAsaRjHK7UUhEz3QZfS2TWvyY83DUe3qIuaZnfAQpV76oGkAcegOKycPvpKWrJgbbB/XRZYlZr2aYW835ykA6noEAt8h7G8wFjgCd51NDb+4rM3jt7f0mUbA/aWKgDIuDbBH5a03EMRotjRUXNA4Nk5tQg/BjjECVtfNiW5oCLKZ17x53XOMSLE3pSmITsYV95HSMQ44Gr5Ku++lCtF1C9lePN6cdjJha5avSkHshU03Z65x4jSvameEZY35zlGieHV8j0=
  - secure: VxeQNt12ODXwYu0ehq1LUDs86I+TEA5q7ZdxMNp/yo7F7aXrbsguYGbSc9yb9G7pMlZhytvBz9DmgQE6nQkjcZurM9vBW7AHaPkv4nsO8yxvdxTSC5Ru2po8TV1fqesd49legEtMEw4KoHcw3HwzQh6rkj9z4satRCUxyWE2CH48ePL/aQAUzjKNoLiMexRcWKNl3+Muz2KhDxQE612C7k2up5PxlGJQnu0VCbDUgdkUPrfjAuL2r/bPib6NXObLyf4ifdnMUyH/coX1BizB9eszMIjXHL+SY8nHq8dZuwoL+ZTYgshI708TyKc48o3CTUuIVIjtYnFLysd6VUOIPuVoQITrI/P6/lefVx4KL7dKYm9mV674DAKDMp7wvWoTKO2Ltsi4ULX+K2kaDzuS+WmL2iAQm8M8VU1ReVdo6hXg7HjFNx+B/oz3j7yGjGasOOgEJtkfAsKhkCgFbXYRQjiMEJ8Rog2KRk9qFy+lGwbXU4V5IgF2q2O4gFPIrQlqAnUGiWFcMyntA8ogEXbBNT7gSH1ZHX58ncQrOwMtnSwQf1SJchKRkJpWlGBBGIhq4m+QxjDuGM7KJAljTQgQcnPsCSFSI4omgq0CcnyYUN3lRHvQ0AEfv7VoIYb5sRpkWMDXw0/YHntkRVZFD6PAPmIP9eIAxe6QOvqvV3KrHf4=
  - secure: NeGTbV0B2dZDK01UA6V8GN6Yoyslssktn0nAcz1OGldJs9Cor0OcZFgOyrIuzC+7dkY5r+lDdrpcdxLgUSlbxySwWg7wBxoOEt4maquktlRYvo5ch0FX7ijCFqGVBSw7X8yOu5Vqrw3umHb7eoW8q6SKc1eQbBex2ppCusumb2pHFxLRrJ1WPNN3FysLJe2w3usnfo3kswJST5QLVuFKfL8chLbawJ6o6yJFDm2rrfQYGIq2hQ39XYi74unZVfs2cnxq1mIb+Zyyeva21fGn1Cu9wSMy/DcMOSd077WiervTDucPupiSQDUXnEtAiNGstvlegj3eyTZTpG4mE7EtSPM7tugTAnYTjF0lTPRmvL7/FRwT5s2yO+lZcb/2wgsPVnf9ctbOxZFE2+WUvkkg/NUYH4CiaWButgQBMPJ5L55wiPgi0iWWLFg3bV3dqU+Pwbvcu0IWg/mWDWMhWgdN5OmH8Ek0OoQT+mTWEdD1mPQWf7ZHHHrFecmanb1g0XAAmt4UyoZuAguTQcfc/PN2kQz9++IME3xYYF3mRibuH1VpxNB4S49ItzJclzihLObUnRxa0FUZZTOc0UpQLmD2EraSheVPnGivJrAVkOhvgOwR2dfr2TkvwTWFO3KbkiWPxMOzYO13vWdG9WiRjNMtks6XOZ+D40GaicLS71f2y50=
  - secure: d0CiehmqRZWbYwggqFiPAhPOVmHLwItGcgJtPKDeexmabDjm0zNm7OzKbuTzP2FVgSAYJMxQeEvzq7AFt9gtBNBQcKrOHZ5EYy32gKEAGNh0zWFTcCjrrg4gysWYPHuLWXkenGFITyrt7JoQkUtN4h0nvywd7hUbDXGe8NT9aDOvDP7W++aM9iz/XPQX3WCgCSlbPJwwjCNv2diRP2v04OtXm3c/wHa1M2b9euEekj/5zKaLDAKKhsnotO+nraQHivOZk1TtRnKH/lxTTBzN+Zm4AhSGMY0ri1urZ5lLkXGTq7Z0jkOG7V10Qf+DBcZvL6thJB6Tguwu0vbBFbpzSdx5uJXFA5Ai+DzRd/vHzQUnO1v7zc/KdOUWtRCc50atmpbZMNa2ANjRyLPeRu0xYVLO6plbUPFn6t6TuHnIfGi4FWqRIlT8f9YI1ctshFjjFivctpnpXq/F+fAEXzDHIQqIuIVD3s+Hs4FzjF7Q2JVemViJ103M1LOPmXXWwVC9gqP9g3Sy2jh8eJaNJGynozf+TeH6kKz0SghUwmE13qyssygPc7dyuoxZWjzy8xZxOIbDmbx61JAfwHGxYd4rG+x7T7pciu+1csoSVLaMMgll2nz2gv8otnMgcvplPhY15oGUdEj7hMRI4UDTm5Quybxm3irRIGWKDMMw/C3zInM=
  - secure: qy5wKCP4axZv8/JOp72Zb5yBpZJ5j0utfFkLFsxnWudAB9UDJO9lrVj3HXP8QDCk+EIC299Orj/VFBAfEFlBl1rcaLxjrhwws+BBxgi7XZmejhfmv+TYZwYtjGQLaVIT2gG3WeOdAl+OUk4WulTy+ryiDcOkfpeQr8UZaFo7edEGe3V+gDmbvbZk6RgIE29eajjcRKGrU8vIidvGxndAhgZPt/62hjdUJoU2ja+3jeChyw6Z8HDV8mzvR7eH2OYS+8521BkY/8NQoRW8Y4/HZaiObhZnuP6LCV6RcQejWOkX+klORHW42pUlCOmE7zvGo8kfMbkj9bIUPEtU5blP6ZXOD1OjLgJLkgUV5pr2HmAHHCGDUv/u7QgN6IR4exYM9rVQsXvBfSNX+movnbutS3DwhsNqukoTtiYMyTADNdFVS1Wny86dy1+J64ERXQ+7aqKfFHxoQR+H64u4q+r3nTdmil/gqN1tLK2KT2agj17QpjGqelYBDH1HikaHvX1WV6gPbpIFAb+rpQwTLKlhECYsMPxRYBvOB2SyGlaGeKjDL0Zg9rhdSUXbw3iqQdZbBKqtnzG4YwYwf0y3R3tLOeqcxucIxnuJWyOiu1a8UrVNNogsOtpHwbGb3x6IZaurNG+6BRU/iOLwc16w7xuG8AAUp+RyY2BYDyUFf60wzTA=
